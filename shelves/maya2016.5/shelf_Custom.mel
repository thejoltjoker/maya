global proc shelf_Custom () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "History" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "DeleteHistory" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "FreezeTransformations" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CenterPivot" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Create a projection planar to the selected faces" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Planar" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyPlanProj.png" 
        -image1 "polyPlanProj.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "polyProjection -ch 1 -type Planar -ibd on -md x ; " 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select faces to be mapped automatically" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Automatic" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyAutoProj.png" 
        -image1 "polyAutoProj.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "performPolyAutoProj 0" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Combine the selected polygon objects into one single object to allow operations such as merges or face trims" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Combine" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyUnite.png" 
        -image1 "polyUnite.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "polyPerformAction polyUnite o 0" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\ncmds.pointConstraint( w=1, mo=False );\ncmds.orientConstraint( w=1, mo=False );\ncmds.delete( cn=True );" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import maya.cmds as cmds\ncmds.pointConstraint( w=1, mo=False );\n..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "cnstDel" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as cmds\ncmds.pointConstraint( w=1, mo=False );\ncmds.orientConstraint( w=1, mo=False );\ncmds.delete( cn=True );" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "sel = cmds.ls(sl=True)\ncontrol = sel[0]\noffset_shape = cmds.listRelatives(sel[1], shapes=True)[0]\n\nif not cmds.attributeQuery('offset', node=control, ex=True):\n    cmds.select(control)\n    cmds.addAttr(ln=\"offset\", at='bool', k=True)\n\n\ncmds.connectAttr('{}.offset'.format(control), '{}.visibility'.format(offset_shape))    " 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "sel = cmds.ls(sl=True)\ncontrol = sel[0]\noffset_shape = cmds.list..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "conOffset" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "sel = cmds.ls(sl=True)\ncontrol = sel[0]\noffset_shape = cmds.listRelatives(sel[1], shapes=True)[0]\n\nif not cmds.attributeQuery('offset', node=control, ex=True):\n    cmds.select(control)\n    cmds.addAttr(ln=\"offset\", at='bool', k=True)\n\n\ncmds.connectAttr('{}.offset'.format(control), '{}.visibility'.format(offset_shape))    " 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Incremental save" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Incremental save" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Is" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "<bound method RafikiMenu.util_incremental_save of <rafiki.maya.menu.RafikiMenu object at 0x000000002D6D6BA8>>" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\ncreate_control_offset.py\nDescription of create_control_offset.py.\n\"\"\"\nimport maya.cmds as cmds\n\n\ndef set_attr():\n    \"\"\"docstring for main\"\"\"\n    sel = cmds.ls(sl=True)\n\n    attribute = 'offset'\n    value = 0\n    # shape = cmds.listRelatives(sel[1], shapes=True)[0]\n\n    for node in sel:\n        if cmds.attributeQuery('offset', node=node, ex=True):\n            node_attr = '.'.join([node, attribute])\n            cmds.setAttr(node_attr, value)\n\n            print(\"{attr} was set to {val}\".format(attr=node_attr, val=value))\n\n\n\nset_attr()\n" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\ncreate_control..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "hideOffset" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\ncreate_control_offset.py\nDescription of create_control_offset.py.\n\"\"\"\nimport maya.cmds as cmds\n\n\ndef set_attr():\n    \"\"\"docstring for main\"\"\"\n    sel = cmds.ls(sl=True)\n\n    attribute = 'offset'\n    value = 0\n    # shape = cmds.listRelatives(sel[1], shapes=True)[0]\n\n    for node in sel:\n        if cmds.attributeQuery('offset', node=node, ex=True):\n            node_attr = '.'.join([node, attribute])\n            cmds.setAttr(node_attr, value)\n\n            print(\"{attr} was set to {val}\".format(attr=node_attr, val=value))\n\n\n\nset_attr()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\nexport_uv_snapshot.py\nDescription of export_uv_snapshot.py.\n\"\"\"\nimport os\nimport maya.cmds as cmds\nimport string\n\n\ndef convert_filename(file):\n    valid_chars = \" -_.{letters}{digits}\".format(\n        letters=string.ascii_letters, digits=string.digits)\n    filename = ''.join(c for c in file if c in valid_chars)\n    filename = filename.replace(' ', '_')\n    return filename\n\n\ndef main():\n    \"\"\"docstring for main\"\"\"\n    sel = cmds.ls(sl=True)[0]\n    scene_path = cmds.file(sn=True, q=True)\n    scene_name = os.path.basename(scene_path)\n    export_path = os.path.join(\n        os.path.dirname(scene_path),\n        '..',\n        '..',\n        'exports')\n    out_filename = '_'.join(\n        [os.path.splitext(scene_name)[0], convert_filename(sel), 'uv.png'])\n    out_file = os.path.abspath(os.path.join(export_path, out_filename))\n\n    if not os.path.exists(export_path):\n        os.makedirs(export_path)\n    cmds.uvSnapshot(aa=True, n=out_file, xr=4096, yr=4096,\n                    r=255, g=255, b=255, o=True, ff='png')\n\n\nmain()\n" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\nexport_uv_snap..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "uvSnap" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"\nexport_uv_snapshot.py\nDescription of export_uv_snapshot.py.\n\"\"\"\nimport os\nimport maya.cmds as cmds\nimport string\n\n\ndef convert_filename(file):\n    valid_chars = \" -_.{letters}{digits}\".format(\n        letters=string.ascii_letters, digits=string.digits)\n    filename = ''.join(c for c in file if c in valid_chars)\n    filename = filename.replace(' ', '_')\n    return filename\n\n\ndef main():\n    \"\"\"docstring for main\"\"\"\n    sel = cmds.ls(sl=True)[0]\n    scene_path = cmds.file(sn=True, q=True)\n    scene_name = os.path.basename(scene_path)\n    export_path = os.path.join(\n        os.path.dirname(scene_path),\n        '..',\n        '..',\n        'exports')\n    out_filename = '_'.join(\n        [os.path.splitext(scene_name)[0], convert_filename(sel), 'uv.png'])\n    out_file = os.path.abspath(os.path.join(export_path, out_filename))\n\n    if not os.path.exists(export_path):\n        os.makedirs(export_path)\n    cmds.uvSnapshot(aa=True, n=out_file, xr=4096, yr=4096,\n                    r=255, g=255, b=255, o=True, ff='png')\n\n\nmain()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\"\"\"\nrename_file_node_to_filename.py\n\nRename file nodes in maya to be the name of the input file.\n\"\"\"\nimport os\nimport maya.cmds as cmds\n\nsel_nodes = cmds.ls(sl=True)\n\nfor node in sel_nodes:\n    if cmds.nodeType(node) == 'file':\n        texturePath = cmds.getAttr(node+\".fileTextureName\")\n        filenameExt = os.path.basename(texturePath)\n        filename = os.path.splitext(filenameExt)[0]+'_FILE'\n        cmds.rename(node, filename)\n" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\"\"\"\nrename_file_node_to_filename.py\n\nRename file nodes in maya t..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "rnFile" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\"\"\"\nrename_file_node_to_filename.py\n\nRename file nodes in maya to be the name of the input file.\n\"\"\"\nimport os\nimport maya.cmds as cmds\n\nsel_nodes = cmds.ls(sl=True)\n\nfor node in sel_nodes:\n    if cmds.nodeType(node) == 'file':\n        texturePath = cmds.getAttr(node+\".fileTextureName\")\n        filenameExt = os.path.basename(texturePath)\n        filename = os.path.splitext(filenameExt)[0]+'_FILE'\n        cmds.rename(node, filename)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Allows interaction with objects during playback" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Interactive Playback" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "interactivePlayback.png" 
        -image1 "interactivePlayback.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "InteractivePlayback" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
